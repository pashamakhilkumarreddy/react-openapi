name: Code

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: code
  cancel-in-progress: true

permissions:
  actions: read
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create code artifact
        uses: actions/upload-artifact@v3
        with:
          name: source-code
          path: .

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Lint code
        run: npm run lint

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Build application
        run: npm run build

      - name: Archive production build
        uses: actions/upload-artifact@v3
        with:
          name: project-build
          path: dist
          retention-days: 1

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm install

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        env:
          NODE_ENV: production
          API_IMAGE_TAG: ${{ github.run_number }}
        run: |
          echo '=> Building Docker image...'
          docker compose -f docker-compose.prod.yml build

      - name: Push Docker image to registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $DOCKER_USERNAME/nestjs-starter:${{ github.run_number }}
